apiVersion: v1
# 객체 PersistentVolume를 나타낸다. PV는 사용자에 의해서 사전에 할당된 볼륨을 나타낸다. 
kind: PersistentVolume
# 볼륨 이름, 레이블 설정 
metadata:
  name: my-pv
  labels:
    name: my-pv
spec:
  capacity:
    storage: 10Ti
  accessModes:
  - ReadWriteMany
  nfs:
    server: 192.168.56.104
    path: /mypath
---
apiVersion: v1
# 객체가 PersistentVolumeClaim 임을 나타낸다. PVC는 PV에 POD가 바인딩되기 위해서 반드시 거쳐야 하는 객체이다. 
# PVC와 PC는 1:1 매핑이 된다. 
kind: PersistentVolumeClaim
# 객체의 이름, 위치할 네임스페이스 지정 
metadata:
  # PVC의 이름 
  name: MYAPP
  # PVC가 배치될 네임스페이스 
  namespace: default
  # PVC의 레이블 
  labels:
    app: MYAPP
# PVC 스펙     
spec:
  # PVC를 호출할 StorageClassName 이다. StorageClass 를 찾고, 해당 스토리지 클래스로 볼륨을 할당받는다. 
  storageClassName: rook-ceph-block
  # 접근모드를 지정한다. 
  # ReadWriteOnce(RWO): 하나의 노드가 볼륨을 Read/Write 가능하도록 마운트
  # ReadOnlyMany(ROX): 여러개의 노드가 Read 전용으로 사용하도록 마운트 
  # ReadWriteMany(RWX): 여러개의 노두가 Read/Write 가능하도록 마운트 
  accessModes:
  - ReadWriteOnce
  # 요청하고자 하는 리소스 정의 
  resources:
    # 요청하는 리소스용량 
    requests:
      # 스토리지 용량 2기가를 할당한다. 
      storage: 2Gi